Day #28
------------
Introduction to Javascript, client side scripting,Javascript functions, FE, IIFE, Arrays, Date and Time Objects, Closures, DOM Objects, JSON, JSON - Objects, arrays etc, JSON-Ajax


JSON
how to convert a json string into object and vice versa

what is an object? in javascript
	an object can contain many properties inside
	it is like a composite type
	we do not need to create a class so that we create object in javascript
	we can directly create any object


Id: <input type="number" name="" id="id"><br>
Name: <input type="text" name="" id="name"><br>
Phone: <input type="text" name="" id="phone"><br>
<input type="button" value="Save">    
<input type="button" value="Retrieve">

when save button  is clicked, the details should be stored in localStorage
when retrieve button is clicked, then the details retrieved from localStorage must be populated to the form inputs

if you can have 3 localStorage, then you know how to do.
But if 1 localStorage should contain all these 3, then you can use an object (that contains 3 info in itself)

object:-
{id: '2', name: 'Malinga', phone: '9878899'}

json:-
{"id":"2","name":"Malinga","phone":"989898"}





<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script>
        function fnSave()
        {
            var id=document.getElementById("id").value;
            var name=document.getElementById("name").value;
            var phone=document.getElementById("phone").value;
            var doj=document.getElementById("doj").value;
            var employee={id:0,name:'',phone:'',doj:''};
            employee.id=id;
            employee.name=name;
            employee.phone=phone;
            employee.doj=doj;
            // console.log(employee);
            //convert an object to JSON string
            var str=JSON.stringify(employee);
            // console.log(str);
            localStorage.setItem("employee",str);
        }
        function fnRetrieve()
        {
            var str=localStorage.getItem("employee");
            //convert JSON string to object
            var employee=JSON.parse(str);
            //populate the values of employee to the form input elements
            document.getElementById("id").value=employee.id;
            document.getElementById("name").value=employee.name;
            document.getElementById("phone").value=employee.phone;
            document.getElementById("doj").value=employee.doj;
        }
    </script>
</head>
<body>
Id: <input type="number" name="" id="id"><br>
Name: <input type="text" name="" id="name"><br>
Phone: <input type="text" name="" id="phone"><br>
Date of Joining: <input type="date" name="" id="doj">
<input type="button" value="Save" onclick="fnSave()">    
<input type="button" value="Retrieve" onclick="fnRetrieve()">
</body>
</html>



How do you show errors?
	bootstrap 5
		is-invalid

how to dynamically apply a class or remove?
	in react it is very easy


when you work with servlets and jsp,
suppose
jsp file has a "dropdownlist"	<select>
on selecting an option, it will not create a submission to servlet
	only when submit button is clicked, it will post the form to the servlet.
	also submit button creates refresh

but we do not want refresh 
	we do not want submit
	when we select an option in dropdownlist

How can we call a server side script from a javascript function
because, a dropdownlist can create client side event only
	from client side event, we handle using js function
	from a javascript from how to call a servlet or server side script.

AJAX
	2007
	Asynchronous Javascript And XML
	without refreshing a page, we are able to access server side scripts



<script>
function loadDoc() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      document.getElementById("demo").innerHTML =
      this.responseText;
    }
  };
  xhttp.open("GET", "servlet1", true);
  xhttp.send();
}
</script>








http://localhost:8080/11-jul-ajax/MyServlet?no1=2&no2=3

-------------------------
Virtual DOM concepts, JSX concepts.

Nodejs
	must be installed in our system
	it is installed in cloud lab
	
how to check node version
	node --version

Virtual DOM
	this is the advantage of ReactJs

DOM vs Virtual DOM
	in DOM, we are working on the document directly
	in virtual DOM, we work on a virtual object of the document in memory
	which is very faster and light weight.

Task:
	Identify what  is virtual DOM
	and difference between DOM and Virtual DOM

since ReactJs uses virtual DOM, it has advantage over other f/ws like angular


JSX
	Javascript XML
	Javascript extension
	Javascript extension to React


allows us to use HTML/ XML in javascript

example
	var str="<div><h1>Heading</h1></div>";
	this is a string version of html





Username: <input type="text" name="" id="txtUsername"><br>
Password: <input type="password" name="" id="txtPassword"><br>
<label for="chkRememberMe">Remember me</label> <input type="checkbox" name="" id="chkRememberMe"><br>
<input type="button" value="Login" onclick="fnLogin()">
<div id="div1"></div>

this entire above text cannot be stored as 
var str='here we cannot fit all those above html code';

so solution is

use ``	instead of ''

where is this ` found in keyboard?		left side of 1

JSX is not a string version of html at all

Task:
	Identify what  is virtual DOM
	and difference between DOM and Virtual DOM


Task:
Understand what is JSX and its usage.

After this activity, we move to lab setup for reactJs.
--------------------------------------------
str="hello";
//change that "h" into "H"
str="Hello";
	this is what happens when you use DOM

vdom:
	we change only that "h" to "H"
	not the entire doc tree
	this is possible because, we do the change in the virtual tree
	not the actual tree

virtual dom is faster than dom

ReactJs
---------
since nodejs is already installed, we can create reactjs projects
using any of the following methods:

1) using npx
2) using npm

using npx:
	npx create-react-app app1
using npm:
	npm install create-react-app
	create-react-app app1

in cmd prompt or in vscode terminal:
--------------------------------------------------
i suggest you to create a project in cmd prompt and then open it in vscode
why?

1) in one terminal the project should be running for ever
	and changes can reflect immediately in browser
2) we view the project output in browser

---------------------
Demo:
create a reactjs project:
1) go to D:\Jag\wipro\June2024\all\reactjs in cmd
npx create-react-app krish

2) now "krish" folder is created and it contains the files
go inside this folder

cd krish

3) open this folder in vs code using following command:
	code .

if that does not work, then open vs code and open the krish folder there

4) in cmd prompt 
D:\Jag\wipro\June2024\all\reactjs\krish		
ensure that you are inside the project folder

now, run the project using:

npm start

5) open browser and check localhost:3000


6) look at the project folder
understand the folders inside.

i) node_modules
	this is the library folder
	without this folder, we cannot run our project
	when i push my files to github,
		git will ignore this folder, because, there is a .gitignore file that mentions the folders to ignore.
	this folder is ignored for good, because, this is a huge folder with around 50k files

if some reactjs project is pulled from github, 
then understand they never have this node_modules folder
so, we an bring this node_modules to our project folder anytime using the command
	npm install

ii) src
	this is where, we write our code
	our code will be 
		components
		services
		etc
iii) package.json
	this is the configuration file that is similar to pom.xml in maven
	it will contain the libraries installed in this project
	we can modify this file later for some reasons
iv) public 
	this folder contains the image files, icons, etc
	this folder contains 
		index.html

	this is the only html file present in our project
	this is the home page
	
in reactjs, we do not create pages.
we create components
	that contains
		html code
		javascript code
		css code
	everything a component contains
	
we will plug the components on root component or child component

v) index.js
	this is the root component for our project

in index.html, you can notice a div
    <div id="root"></div>

now in index.js
you can see
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

now, notice, <App />
App component is plugged in the index.js

we use this approach
we create components and plug them in other components.

App.js
	contains the scaffholding ie., the basic structure of home page

we need to plug all our components inside App.js or its sub components

------------------------------
Task:
Create a react js application, run it
and modify the App.js
to print hello world

1) open the folder where you want to create the project.		Later, moving this project folder to another location is difficult
2) create the app
	npx create-react-app <<projectname>>
3) cd <<projectname>>
4) open vs code in this location
	code .
5) in cmd prompt:
	npm start
6) check browser 
	localhost:3000
7) modify App.js
	to print hello world



---------------------
when you get error
	npm i create-react-app
		you are getting error.

solution:
	this create-react-app installation needs the following components to be installed successfully.
	if not, we will install them one by one globally once


react
react-dom
react-scripts
cra-template

	all these to be installed manually

npm i -g react
npm i -g react-dom
npm i -g react-scripts
npm i -g cra-template


------------------------------------
npm i -g create-react-app

if we do this once, -g (globally) that is enough

npx create-react-app <<appname>>
we use everytime.

we have created the reactjs application now,
in App.js
	we have modified the code.

we can create the home page in App.js
and we can plug components here.

Demo:
lets create the home page in App.js

shall we use bootstrap?
	i) by adding bootstrap CDN 
		where is html code?????
			the only html file we have is index.html	in public folder

	ii) install bootstrap component in cmd prompt

1) adding bootstrap cdn to our html page
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

add these lines inside <head></head> in index.html file

2) in App.js
	add the home page content

-------------------------------
Now, you have created the home page
	App.js

now, lets create components and plug them in App.js	
App.js is a component 

How to create components in reactjs?
	1) class based component
	2)  function based component	(functional component)
		arrow function also

among these 2 approaches, functional/ arrow functional components are very popular.
class based component is not much used in industry. So lets learn class based component first and then move to function based.

Demo:
creating a hello world component using 
	class based approach
	function based approach
	arrow functional approach


i) lets create a folder "components" inside "src"
	right click "src" and create a folder "components"
		lets create all components in this folder only

use firstletter capital for the component name

A class component compulsorily have a "render" method
it can have any number of methods, but "render" is compulsory

const { Component } = require("react");

class Hello extends Component
{
    render(){
        return <div>
            Hello world.....
        </div>
    }
}

this component cannot be plugged in other components,
until we export this component. export makes this component "public"

const { Component } = require("react");

class Hello extends Component
{
    render(){
        return <div>
            Hello world.....
        </div>
    }
}
export default Hello;



Now, lets plug this component in App.js

in App.js
	choose where to plug this component
		<Hello />

notice that an import is required:

import Hello from './components/hello';
	you may write this on the top or
	use ctrl space while typing <Hello />



Task:
Create a class component and plug it in App component.









